# Docker Compose配置文件

services:
  # CBG爬虫后端API服务
  cbg-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cbg-spider-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      # Flask配置
      - FLASK_APP=src/app.py
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      
      # 数据库连接配置（连接到宿主机MariaDB）
      - DB_HOST=host.docker.internal
      - DB_PORT=3306
      - DB_NAME=cbg_spider
      - DB_USER=cbg_user
      - DB_PASSWORD_FILE=/run/secrets/db_password
      
      # 应用配置
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
      - SPIDER_DELAY_MIN=5
      - SPIDER_DELAY_MAX=8
      
    volumes:
      # 数据持久化
      - ./data:/app/data
      - ./logs:/app/logs
      - ./output:/app/output
      - ./config:/app/config
      
      # 配置文件挂载
      - ./src:/app/src:ro
      
    secrets:
      - db_password
      
    networks:
      - cbg-network
      
    depends_on:
      - cbg-web
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # CBG前端Web服务
  cbg-web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: cbg-spider-web
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
      - VUE_APP_API_BASE_URL=http://localhost:5000/api/v1
      
    volumes:
      - ./web/dist:/usr/share/nginx/html:ro
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      
    networks:
      - cbg-network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理服务
  nginx:
    image: nginx:alpine
    container_name: cbg-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./web/dist:/var/www/html:ro
      - ./logs/nginx:/var/log/nginx
      # SSL证书（如果有的话）
      # - ./ssl:/etc/nginx/ssl:ro
    networks:
      - cbg-network
    depends_on:
      - cbg-api
      - cbg-web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  cbg-network:
    driver: bridge
    
secrets:
  db_password:
    file: ./secrets/db_password.txt

volumes:
  cbg-data:
    driver: local
  cbg-logs:
    driver: local
