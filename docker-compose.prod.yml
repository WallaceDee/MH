# 生产环境Docker Compose配置 - 全栈应用
# 连接到现有的MariaDB数据库

services:
  # CBG API服务（仅提供API）
  cbg-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cbg-api
    restart: unless-stopped
    expose:
      - "5000"
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    environment:
      # Flask配置
      - FLASK_APP=src/app.py
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      
      # 数据库连接配置（连接到宿主机MariaDB）
      - DB_HOST=host.docker.internal
      - DB_PORT=3306
      - DB_NAME=cbg_spider
      - DB_USER=cbg_user
      
      # 应用配置
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
      - SPIDER_DELAY_MIN=5
      - SPIDER_DELAY_MAX=8
      
    volumes:
      # 数据持久化
      - ./data:/app/data
      - ./logs:/app/logs
      - ./output:/app/output
      - ./config:/app/config
      
      # 数据库密码文件
      - /root/cbg_mariadb_password.txt:/app/secrets/db_password.txt:ro
      
    extra_hosts:
      # 允许容器访问宿主机服务
      - "host.docker.internal:host-gateway"
      
    networks:
      - cbg-network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理服务
  cbg-nginx:
    image: nginx:alpine
    container_name: cbg-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      # Nginx配置
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # 前端构建文件
      - ./web/dist:/usr/share/nginx/html:ro
    depends_on:
      - cbg-api
    networks:
      - cbg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  cbg-network:
    driver: bridge
