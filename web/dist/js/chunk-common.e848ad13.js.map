{"version":3,"file":"js/chunk-common.e848ad13.js","mappings":"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","sources":["webpack://web/./src/api/system.js","webpack://web/./src/App.vue","webpack://web/./src/components/Header.vue","webpack://web/./src/components/CookieStatus.vue","webpack://web/src/components/CookieStatus.vue","webpack://web/./src/components/CookieStatus.vue?d0cf","webpack://web/./src/components/CookieStatus.vue?f057","webpack://web/src/components/Header.vue","webpack://web/./src/components/Header.vue?6efa","webpack://web/./src/components/Header.vue?03e2","webpack://web/src/App.vue","webpack://web/./src/App.vue?c036","webpack://web/./src/App.vue?0e40","webpack://web/./src/api/pet.js","webpack://web/./src/plugins/cookieManager.js","webpack://web/./src/store/index.js","webpack://web/./src/utils/request.js","webpack://web/./src/api/role.js","webpack://web/./src/api/equipment.js","webpack://web/./src/api/spider.js","webpack://web/./src/api/index.js"],"sourcesContent":["import { api } from '@/utils/request'\r\n\r\n/**\r\n * 系统相关API\r\n */\r\nexport const systemApi = {\r\n  /**\r\n   * 获取系统信息\r\n   * @returns {Promise}\r\n   */\r\n  getSystemInfo() {\r\n    return api.get('/system/info')\r\n  },\r\n\r\n  /**\r\n   * 获取文件列表\r\n   * @returns {Promise}\r\n   */\r\n  getFiles() {\r\n    return api.get('/system/files')\r\n  },\r\n\r\n  /**\r\n   * 下载文件\r\n   * @param {string} filename - 文件名\r\n   * @returns {Promise}\r\n   */\r\n  downloadFile(filename) {\r\n    return api.get(`/system/files/${filename}/download`)\r\n  },\r\n\r\n  /**\r\n   * 获取热门服务器列表\r\n   * @returns {Promise} 直接返回服务器分组数组，无包装格式\r\n   */\r\n  getHotServers() {\r\n    return api.get('/system/config-file/hot_server_list.json')\r\n  },\r\n\r\n  \r\n  /**\r\n   * 获取限量锦衣祥瑞配置\r\n   * @returns {Promise} 直接返回限量锦衣祥瑞配置\r\n   */\r\n  getLimitedSkinConfig() {\r\n    return api.get('/system/config-file/ex_avt_value.jsonc')\r\n  },\r\n\r\n  /**\r\n   * 获取所有搜索参数配置\r\n   * @returns {Promise}\r\n   */\r\n  getSearchParams() {\r\n    return api.get('/system/config/search-params')\r\n  },\r\n\r\n  /**\r\n   * 根据类型获取特定的搜索参数配置\r\n   * @param {string} paramType - 参数类型 (role, equip_normal, equip_lingshi, equip_pet, equip_pet_equip, pet)\r\n   * @returns {Promise}\r\n   */\r\n  getSearchParamByType(paramType) {\r\n    return api.get(`/system/config/search-params/${paramType}`)\r\n  },\r\n\r\n  /**\r\n   * 更新特定类型的搜索参数配置\r\n   * @param {string} paramType - 参数类型\r\n   * @param {Object} data - 配置数据\r\n   * @returns {Promise}\r\n   */\r\n  updateSearchParam(paramType, data) {\r\n    return api.post(`/system/config/search-params/${paramType}`, data)\r\n  },\r\n\r\n  /**\r\n   * 获取市场数据状态\r\n   * @returns {Promise}\r\n   */\r\n  getMarketDataStatus() {\r\n    return api.get('/system/market-data/status')\r\n  },\r\n\r\n  /**\r\n   * 获取市场数据详细分析\r\n   * @returns {Promise}\r\n   */\r\n  getMarketDataAnalysis() {\r\n    return api.get('/system/market-data/analysis')\r\n  },\r\n  /**\r\n   * 刷新市场数据\r\n   * @returns {Promise}\r\n   */\r\n  refreshMarketData() {\r\n    return api.post('/system/market-data/refresh', {\r\n      force_refresh: false,\r\n      use_cache: true\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 刷新全量缓存（不使用缓存，完全重新加载）\r\n   * @returns {Promise}\r\n   */\r\n  refreshFullCache() {\r\n    return api.post('/system/market-data/refresh', {\r\n      force_refresh: true,\r\n      use_cache: true\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 获取角色刷新进度状态\r\n   * @returns {Promise}\r\n   */\r\n  getRoleRefreshStatus() {\r\n    return api.get('/system/market-data/role/refresh-status')\r\n  },\r\n\r\n  /**\r\n   * 获取缓存状态\r\n   * @returns {Promise}\r\n   */\r\n  getCacheStatus() {\r\n    return api.get('/system/market-data/cache-status')\r\n  },\r\n\r\n  /**\r\n   * 获取装备缓存状态\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentCacheStatus() {\r\n    return api.get('/system/market-data/equipment/cache-status')\r\n  },\r\n\r\n  /**\r\n   * 刷新装备数据（使用缓存）\r\n   * @returns {Promise}\r\n   */\r\n  refreshEquipmentData() {\r\n    return api.post('/system/market-data/equipment/refresh', {\r\n      force_refresh: false,\r\n      use_cache: true\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 刷新装备全量缓存（不使用缓存，完全重新加载）\r\n   * @returns {Promise}\r\n   */\r\n  refreshEquipmentFullCache() {\r\n    return api.post('/system/market-data/equipment/refresh', {\r\n      force_refresh: true,\r\n      use_cache: true\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 获取装备市场数据状态\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentMarketDataStatus() {\r\n    return api.get('/system/market-data/equipment/status')\r\n  },\r\n\r\n  getRedisStatus() {\r\n    return api.get('/system/redis/status')\r\n  },\r\n\r\n\r\n  /**\r\n   * 获取装备刷新进度状态\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentRefreshStatus() {\r\n    return api.get('/system/market-data/equipment/refresh-status')\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * 获取召唤兽缓存状态\r\n   * @returns {Promise}\r\n   */\r\n  getPetCacheStatus() {\r\n    return api.get('/system/market-data/pet/cache-status')\r\n  },\r\n\r\n  /**\r\n   * 获取召唤兽市场数据状态\r\n   * @returns {Promise}\r\n   */\r\n  getPetMarketDataStatus() {\r\n    return api.get('/system/market-data/pet/status')\r\n  },\r\n\r\n  /**\r\n   * 刷新召唤兽数据（使用缓存）\r\n   * @returns {Promise}\r\n   */\r\n  refreshPetData() {\r\n    return api.post('/system/market-data/pet/refresh', {\r\n      force_refresh: false,\r\n      use_cache: true\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 刷新召唤兽全量缓存（不使用缓存，完全重新加载）\r\n   * @returns {Promise}\r\n   */\r\n  refreshPetFullCache() {\r\n    return api.post('/system/market-data/pet/refresh', {\r\n      force_refresh: true,\r\n      use_cache: true\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 获取召唤兽刷新进度状态\r\n   * @returns {Promise}\r\n   */\r\n  getPetRefreshStatus() {\r\n    return api.get('/system/market-data/pet/refresh-status')\r\n  },\r\n\r\n  /**\r\n   * 获取系统统计数据\r\n   * @returns {Promise}\r\n   */\r\n  getSystemStats() {\r\n    return api.get('/system/stats')\r\n  }\r\n} ","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-container',[(_vm.$route.meta.showHeader)?_c('Header'):_vm._e(),_c('el-main',{style:({padding:_vm.$route.meta.showHeader?'20px':'0'})},[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-header',[_c('div',{staticClass:\"header-content\"},[_c('el-menu',{attrs:{\"mode\":\"horizontal\",\"router\":true,\"default-active\":_vm.activeMenuIndex}},[_c('el-menu-item',{attrs:{\"index\":\"/\"}},[_vm._v(\"🏠️\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"首页\")])]),_c('el-menu-item',{attrs:{\"index\":\"/roles/normal/109,175/1\"}},[_vm._v(\"👥\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"角色\")])]),_c('el-menu-item',{attrs:{\"index\":\"/roles/empty/109,175/1\"}},[_vm._v(\"🎯\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"空号\")])]),_c('el-menu-item',{attrs:{\"index\":\"/equipments\"}},[_vm._v(\"⚔️\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"装备\")])]),_c('el-menu-item',{attrs:{\"index\":\"/pets\"}},[_vm._v(\"🐲\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"召唤兽\")])]),_c('el-menu-item',{attrs:{\"index\":\"/equipment-desc-creator\"}},[_vm._v(\"🔨\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"装备模拟\")])]),_c('el-menu-item',{attrs:{\"index\":\"/market-data-status\"}},[_vm._v(\"📊\"),_c('span',{staticClass:\"menu-item-text\"},[_vm._v(\"数据状态\")])])],1),_c('el-popover',{attrs:{\"placement\":\"bottom\",\"width\":\"400\",\"trigger\":\"click\",\"popper-class\":\"cookie-popover\",\"visible-arrow\":false}},[_c('el-button',{staticClass:\"cookie-button\",attrs:{\"slot\":\"reference\",\"type\":_vm.cookieButtonType,\"size\":\"mini\"},slot:\"reference\"},[_vm._v(\" \"+_vm._s(_vm.cookieButtonText)+\" \")]),_c('div',[_c('CookieStatus',{attrs:{\"auto-check\":true,\"show-cache-info\":true,\"show-actions\":true}})],1)],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"cookie-status-section\"},[_c('el-alert',{attrs:{\"title\":_vm.dynamicCookieStatus.text,\"type\":_vm.dynamicCookieStatus.type,\"closable\":false,\"show-icon\":\"\"}},[_c('el-row',{staticClass:\"el-el-alert__title\",attrs:{\"type\":\"flex\",\"align\":\"middle\"}},[(_vm.dynamicCookieStatus.lastModified)?_c('span',[_vm._v(\" 最后更新: \"+_vm._s(_vm.dynamicCookieStatus.lastModified)+\" \")]):_vm._e(),(_vm.getCacheRemainingMinutes > 0)?_c('p',{staticStyle:{\"margin-left\":\"10px\",\"color\":\"#67c23a\"}},[_vm._v(\" ⏰ 缓存有效: \"+_vm._s(_vm.getCacheRemainingMinutes)+\"分钟 \")]):_vm._e()]),_c('el-row',{staticClass:\"el-alert__description\",attrs:{\"type\":\"flex\",\"align\":\"middle\"}},[_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"text\",\"size\":\"mini\",\"loading\":_vm.cookieChecking,\"disabled\":_vm.cookieUpdating},on:{\"click\":_vm.handleCheckStatus}},[_vm._v(\" 🔍 检查状态 \")]),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\",\"loading\":_vm.cookieUpdating,\"disabled\":_vm.cookieChecking},on:{\"click\":_vm.handleUpdateCookies}},[_vm._v(\" ♻️ 更新/登录 \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"cookie-status-section\">\r\n    <el-alert :title=\"dynamicCookieStatus.text\" :type=\"dynamicCookieStatus.type\" :closable=\"false\" show-icon>\r\n      <el-row class=\"el-el-alert__title\" type=\"flex\" align=\"middle\">\r\n        <span v-if=\"dynamicCookieStatus.lastModified\">\r\n          最后更新: {{ dynamicCookieStatus.lastModified }}\r\n        </span>\r\n        <p v-if=\"getCacheRemainingMinutes > 0\" style=\"margin-left: 10px; color: #67c23a;\">\r\n          ⏰ 缓存有效: {{ getCacheRemainingMinutes }}分钟\r\n        </p>\r\n\r\n      </el-row>\r\n      <el-row class=\"el-alert__description\" type=\"flex\" align=\"middle\">\r\n      <el-button type=\"text\" size=\"mini\" style=\"margin-left: 10px;\" @click=\"handleCheckStatus\"\r\n          :loading=\"cookieChecking\" :disabled=\"cookieUpdating\">\r\n          🔍 检查状态\r\n        </el-button>\r\n        <!-- <el-button v-if=\"getCacheRemainingMinutes > 0\" type=\"text\" size=\"mini\" style=\"margin-left: 5px;\" \r\n          @click=\"handleClearCache\" :disabled=\"cookieChecking || cookieUpdating\">\r\n          🗑️ 清除缓存\r\n        </el-button> -->\r\n        <el-button  type=\"text\" size=\"mini\" @click=\"handleUpdateCookies\"\r\n          :loading=\"cookieUpdating\" :disabled=\"cookieChecking\">\r\n          ♻️ 更新/登录\r\n        </el-button>\r\n        </el-row>\r\n    </el-alert>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CookieStatus',\r\n  props: {\r\n    // 是否自动检查Cookie状态\r\n    autoCheck: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否显示缓存信息\r\n    showCacheInfo: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 是否显示操作按钮\r\n    showActions: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // Cookie状态\r\n      cookiesStatus: {\r\n        type: 'info',\r\n        text: '未检查',\r\n        lastModified: null,\r\n        server_validated: false\r\n      },\r\n      // 🍪 更新状态\r\n      cookieUpdating: false,\r\n      cookieChecking: false,\r\n      // 🍪 更新监控定时器\r\n      cookieUpdateTimer: null\r\n    }\r\n  },\r\n  computed: {\r\n    // Cookie缓存相关计算属性\r\n    isCookieCacheValid() {\r\n      return this.$store.getters['cookie/isCookieCacheValid']\r\n    },\r\n\r\n    getCacheRemainingMinutes() {\r\n      return this.$store.getters['cookie/getCacheRemainingMinutes']\r\n    },\r\n\r\n    getCacheExpiryTime() {\r\n      return this.$store.getters['cookie/getCacheExpiryTime']\r\n    },\r\n\r\n    // 动态Cookie状态显示\r\n    dynamicCookieStatus() {\r\n      if (this.isCookieCacheValid) {\r\n        return {\r\n          type: 'success',\r\n          text: '🍪 有效',\r\n          lastModified: '缓存中',\r\n          server_validated: true\r\n        }\r\n      }\r\n      return this.cookiesStatus\r\n    }\r\n  },\r\n  mounted() {\r\n    // 自动检查Cookie状态\r\n    if (this.autoCheck) {\r\n      this.$nextTick(() => {\r\n        this.handleCheckStatus()\r\n      })\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // 清理定时器\r\n    this.stopCookieUpdateMonitoring()\r\n  },\r\n  methods: {\r\n    // 处理检查状态\r\n    async handleCheckStatus() {\r\n      if (this.cookieChecking) return\r\n\r\n      // 检查缓存是否有效\r\n      if (this.isCookieCacheValid) {\r\n        console.log('使用 🍪 验证缓存，跳过服务器验证')\r\n        return\r\n      }\r\n\r\n      this.cookieChecking = true\r\n      try {\r\n        const response = await this.$api.spider.checkCookie()\r\n        if (response.code === 200) {\r\n          const data = response.data\r\n          if (data.valid) {\r\n            // Cookie有效，更新缓存\r\n            this.$store.commit('cookie/updateCookieCache', true)\r\n            this.cookiesStatus = {\r\n              type: 'success',\r\n              text: '🍪 有效',\r\n              lastModified: data.last_modified || '未知',\r\n              server_validated: true\r\n            }\r\n          } else {\r\n            // Cookie无效，清除缓存\r\n            this.$store.commit('cookie/updateCookieCache', false)\r\n            this.cookiesStatus = {\r\n              type: 'error',  \r\n              text: '🍪 已过期',  \r\n              lastModified: data.last_modified || '未知',\r\n              server_validated: false\r\n            }\r\n            this.$notify.warning({\r\n              title: '🍪 已过期',\r\n              message: '需要重新登录'\r\n            })\r\n          }\r\n        } else {\r\n          // 检查失败，清除缓存\r\n          this.$store.commit('cookie/updateCookieCache', false)\r\n          this.cookiesStatus = {\r\n            type: 'danger',\r\n            text: '检查失败',\r\n            lastModified: '未知',\r\n            server_validated: false\r\n          }\r\n          this.$notify.error({\r\n            title: '检查失败',\r\n            message: response.message || '检查Cookies状态失败'\r\n          })\r\n        }\r\n        \r\n        // 触发状态变化事件\r\n        this.$emit('status-change', this.cookiesStatus)\r\n      } catch (error) {\r\n        this.cookiesStatus = {\r\n          type: 'danger',\r\n          text: '检查失败',\r\n          lastModified: '未知',\r\n          server_validated: false\r\n        }\r\n        this.$notify.error({\r\n          title: '检查失败',\r\n          message: '检查🍪状态失败: ' + error.message\r\n        })\r\n        this.$emit('status-change', this.cookiesStatus)\r\n      } finally {\r\n        this.cookieChecking = false\r\n      }\r\n    },\r\n\r\n    // 处理清除缓存\r\n    handleClearCache() {\r\n      this.$store.dispatch('cookie/clearCookieCache')\r\n      this.$notify.info({\r\n        title: '缓存已清除',\r\n        message: 'Cookie验证缓存已清除，下次检查将重新验证'\r\n      })\r\n      this.$emit('cache-cleared')\r\n    },\r\n\r\n    // 处理更新Cookies\r\n    async handleUpdateCookies() {\r\n      if (this.cookieUpdating) return\r\n\r\n      this.cookieUpdating = true\r\n      try {\r\n        this.$notify.info({\r\n          title: '🍪 更新',\r\n          message: '正在启动🍪 更新程序，请在弹出的浏览器中登录...'\r\n        })\r\n\r\n        const response = await this.$api.spider.updateCookies()\r\n        if (response.code === 200) {\r\n          // 不立即显示成功，而是提示用户等待\r\n          this.$notify.info({\r\n            title: '🍪 更新',\r\n            message: '🍪 更新程序已启动，请在浏览器中完成登录操作'\r\n          })\r\n\r\n          // 更新Cookie状态为\"更新中\"\r\n          this.cookiesStatus = {\r\n            type: 'warning',\r\n            text: '🍪 更新中...',\r\n            lastModified: '未知',\r\n            server_validated: false\r\n          }\r\n\r\n          // 启动状态检查，定期检查🍪 更新是否完成\r\n          this.startCookieUpdateMonitoring()\r\n          \r\n          this.$emit('update-started')\r\n        } else {\r\n          throw new Error(response.message || '🍪 更新失败')\r\n        }\r\n      } catch (error) {\r\n        this.$notify.error('🍪 更新失败: ' + error.message)\r\n        this.$emit('update-failed', error)\r\n      } finally {\r\n        this.cookieUpdating = false\r\n      }\r\n    },\r\n\r\n    // 启动🍪 更新监控\r\n    startCookieUpdateMonitoring() {\r\n      // 清除之前的定时器\r\n      if (this.cookieUpdateTimer) {\r\n        clearInterval(this.cookieUpdateTimer)\r\n      }\r\n\r\n      let checkCount = 0\r\n      const maxChecks = 60 // 最多检查60次（5分钟）\r\n\r\n      this.cookieUpdateTimer = setInterval(async () => {\r\n        checkCount++\r\n\r\n        try {\r\n          // 检查任务状态\r\n          const statusResponse = await this.$api.spider.getStatus()\r\n          if (statusResponse.code === 200) {\r\n            const status = statusResponse.data\r\n\r\n            if (status.status === 'completed' && status.message.includes('🍪 更新成功')) {\r\n              // 🍪 更新成功\r\n              clearInterval(this.cookieUpdateTimer)\r\n              this.cookieUpdateTimer = null\r\n\r\n              // 清除Cookie验证缓存，确保重新验证\r\n              this.updateCookieCache(false)\r\n              \r\n              this.$notify.success({\r\n                title: '🍪 更新',\r\n                message: '🍪 更新成功！'\r\n              })\r\n              this.cookiesStatus = {\r\n                type: 'success',\r\n                text: '🍪 已更新',\r\n                lastModified: '刚刚',\r\n                server_validated: true\r\n              }\r\n\r\n              // 重新检查Cookie状态\r\n              await this.handleCheckStatus()\r\n              this.$emit('update-completed')\r\n            } else if (status.status === 'error' && status.message.includes('🍪 更新失败')) {\r\n              // 🍪 更新失败\r\n              clearInterval(this.cookieUpdateTimer)\r\n              this.cookieUpdateTimer = null\r\n\r\n              this.$notify.error({\r\n                title: '🍪 更新',\r\n                message: '🍪 更新失败，请重试'\r\n              })\r\n              this.cookiesStatus = {\r\n                type: 'danger',\r\n                text: '🍪 更新失败',\r\n                lastModified: '未知',\r\n                server_validated: false\r\n              }\r\n              this.$emit('update-failed', new Error('🍪 更新失败'))\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('检查 🍪 更新状态失败:', error)\r\n        }\r\n\r\n        // 如果检查次数超过限制，停止监控\r\n        if (checkCount >= maxChecks) {\r\n          clearInterval(this.cookieUpdateTimer)\r\n          this.cookieUpdateTimer = null\r\n\r\n          this.$notify.warning({\r\n            title: '🍪 更新',\r\n            message: '🍪 更新监控超时，请手动检查状态'\r\n          })\r\n          this.cookiesStatus = {\r\n            type: 'warning',\r\n            text: '🍪 更新状态未知',\r\n            lastModified: '未知',\r\n            server_validated: false\r\n          }\r\n          this.$emit('update-timeout')\r\n        }\r\n      }, 5000) // 每5秒检查一次\r\n    },\r\n\r\n    // 停止🍪 更新监控\r\n    stopCookieUpdateMonitoring() {\r\n      if (this.cookieUpdateTimer) {\r\n        clearInterval(this.cookieUpdateTimer)\r\n        this.cookieUpdateTimer = null\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-alert__description {\r\n  margin-top: 10px;\r\n}\r\n\r\n.el-alert__description p {\r\n  margin: 5px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #606266;\r\n  font-size: 13px;\r\n}\r\n:global(.cookie-status-section .el-alert) {\r\n  align-items: flex-start;\r\n}\r\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CookieStatus.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CookieStatus.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CookieStatus.vue?vue&type=template&id=43b287a4&scoped=true\"\nimport script from \"./CookieStatus.vue?vue&type=script&lang=js\"\nexport * from \"./CookieStatus.vue?vue&type=script&lang=js\"\nimport style0 from \"./CookieStatus.vue?vue&type=style&index=0&id=43b287a4&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"43b287a4\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <el-header>\r\n        <div class=\"header-content\">\r\n            <el-menu mode=\"horizontal\" :router=\"true\" :default-active=\"activeMenuIndex\">\r\n                <el-menu-item index=\"/\">🏠️<span class=\"menu-item-text\">首页</span></el-menu-item>\r\n                <el-menu-item index=\"/roles/normal/109,175/1\">👥<span class=\"menu-item-text\">角色</span></el-menu-item>\r\n                <el-menu-item index=\"/roles/empty/109,175/1\">🎯<span class=\"menu-item-text\">空号</span></el-menu-item>\r\n                <el-menu-item index=\"/equipments\">⚔️<span class=\"menu-item-text\">装备</span></el-menu-item>\r\n                <el-menu-item index=\"/pets\">🐲<span class=\"menu-item-text\">召唤兽</span></el-menu-item>\r\n                <el-menu-item index=\"/equipment-desc-creator\">🔨<span class=\"menu-item-text\">装备模拟</span></el-menu-item>\r\n                <el-menu-item index=\"/market-data-status\">📊<span class=\"menu-item-text\">数据状态</span></el-menu-item>\r\n            </el-menu>\r\n            <el-popover placement=\"bottom\" width=\"400\" trigger=\"click\" popper-class=\"cookie-popover\"\r\n                :visible-arrow=\"false\">\r\n                <el-button slot=\"reference\" :type=\"cookieButtonType\" class=\"cookie-button\" size=\"mini\">\r\n                    {{ cookieButtonText }}\r\n                </el-button>\r\n                <div>\r\n                    <CookieStatus :auto-check=\"true\" :show-cache-info=\"true\" :show-actions=\"true\" />\r\n                </div>\r\n            </el-popover>\r\n        </div>\r\n    </el-header>\r\n</template>\r\n<script>\r\nimport CookieStatus from '@/components/CookieStatus.vue'\r\nexport default {\r\n    name: 'Header',\r\n    components: {\r\n        CookieStatus\r\n    },\r\n    computed: {\r\n        // 当前激活的菜单项索引\r\n        activeMenuIndex() {\r\n            const path = this.$route.path\r\n            \r\n            // 根据路由路径确定激活的菜单项\r\n            if (path === '/') {\r\n                return '/'\r\n            } else if (path.startsWith('/roles/normal')) {\r\n                return '/roles/normal/109,175/1'\r\n            } else if (path.startsWith('/roles/empty')) {\r\n                return '/roles/empty/109,175/1'\r\n            } else if (path.startsWith('/roles')) {\r\n                return '/roles/normal/109,175/1' // 默认角色页面\r\n            } else if (path.startsWith('/equipments')) {\r\n                return '/equipments'\r\n            } else if (path.startsWith('/pets')) {\r\n                return '/pets'\r\n            } else if (path.startsWith('/equipment-desc-creator')) {\r\n                return '/equipment-desc-creator'\r\n            } else if (path.startsWith('/market-data-status')) {\r\n                return '/market-data-status'\r\n            }\r\n            \r\n            return '/'\r\n        },\r\n        \r\n        // Cookie缓存相关计算属性\r\n        isCookieCacheValid() {\r\n            return this.$store.getters['cookie/isCookieCacheValid']\r\n        },\r\n\r\n        getCacheRemainingMinutes() {\r\n            return this.$store.getters['cookie/getCacheRemainingMinutes']\r\n        },\r\n\r\n        // Cookie按钮状态\r\n        cookieButtonType() {\r\n            if (this.isCookieCacheValid) {\r\n                return 'success'\r\n            }\r\n            return 'danger'\r\n        },\r\n\r\n        cookieButtonIcon() {\r\n            if (this.isCookieCacheValid) {\r\n                return 'el-icon-check'\r\n            }\r\n            return 'el-icon-close'\r\n        },\r\n\r\n        cookieButtonText() {\r\n            if (this.isCookieCacheValid) {\r\n                return '🍪 有效'\r\n            }\r\n            return '🍪 已过期'\r\n        }\r\n    },\r\n    mounted() {\r\n        // 启动定时器，每分钟更新一次按钮状态\r\n        this.updateTimer = setInterval(() => {\r\n            // 强制更新计算属性\r\n            this.$forceUpdate()\r\n        }, 60000) // 每分钟更新一次\r\n        \r\n        // 监听路由变化\r\n        this.$watch('$route', () => {\r\n            // 路由变化时强制更新组件\r\n            this.$forceUpdate()\r\n        }, { immediate: true })\r\n    },\r\n    beforeDestroy() {\r\n        // 清理定时器\r\n        if (this.updateTimer) {\r\n            clearInterval(this.updateTimer)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.header-content .el-menu {\r\n    background: transparent;\r\n}\r\n\r\n.header-content .el-menu .menu-item-text {\r\n    background: transparent;\r\n    margin-left: 10px;\r\n\r\n}\r\n\r\n.header-content .el-menu .is-active {\r\n    font-size: 24px;\r\n}\r\n\r\n.header-content .el-menu .is-active .menu-item-text {\r\n\r\n    display: none;\r\n}\r\n\r\n.el-header {\r\n    background-color: #F5F5F5;\r\n    border-bottom: 1px solid #E7E7E7;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n.header-content {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100%;\r\n    justify-content: space-between;\r\n}\r\n\r\n.header-content h1 {\r\n    margin: 0 20px 0 0;\r\n    font-size: 20px;\r\n}\r\n\r\n/* Cookie按钮样式 */\r\n.cookie-button {\r\n    margin-left: auto;\r\n    font-size: 12px;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.cookie-button:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n:global(.cookie-popover) {\r\n    padding: 0 !important;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Header.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Header.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=031375db&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=031375db&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"031375db\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <el-container>\r\n    <Header v-if=\"$route.meta.showHeader\" />\r\n    <el-main :style=\"{padding:$route.meta.showHeader?'20px':'0'}\">\r\n      <router-view />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport Header from '@/components/Header.vue'\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Header\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n:global(.el-table--striped .el-table__body tr.el-table__row--striped td.el-table__cell) {\r\n  background-color: #ededf4 !important;\r\n}\r\n\r\n:global(.el-table .el-table__fixed-header-wrapper) {\r\n  background-color: #ededf4 !important;\r\n}\r\n/* :global(img) {\r\n  opacity: 0 !important;\r\n}*/\r\n:global(html) {\r\n    /* filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);\r\n    -webkit-filter: grayscale(100%); */\r\n} \r\n:global(.el-card) {\r\n  border-radius: 8px !important;\r\n}\r\n\r\n:global(.el-card .el-card__header) {\r\n  padding: 8px 16px;\r\n}\r\n\r\n:global(.emoji-icon) {\r\n  display: inline-block;\r\n  border-radius: 6px;\r\n  width: 38px;\r\n  height: 38px;\r\n  background-color: rgba(0, 122, 255, 0.12);\r\n  line-height: 38px;\r\n  text-align: center;\r\n  color: rgb(0, 122, 255);\r\n}\r\n\r\n.el-container {\r\n  flex-direction: column;\r\n}\r\n\r\n.el-main {\r\n  min-height: 100vh;\r\n  background-color: #ECECEC;\r\n  border: 0 solid #C3C5DE;\r\n}\r\n\r\n.el-header+.el-container {\r\n  min-height: calc(100vh - 60px);\r\n}\r\n</style>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=ce23e902&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=ce23e902&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ce23e902\",\n  null\n  \n)\n\nexport default component.exports","import { api } from '@/utils/request'\r\n\r\n/**\r\n * 召唤兽相关API\r\n */\r\nexport const petApi = {\r\n  /**\r\n   * 获取召唤兽列表\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise}\r\n   */\r\n  getPetList(params = {}) {\r\n    return api.get('/pet/', params)\r\n  },\r\n\r\n  /**\r\n   * 获取召唤兽详情\r\n   * @param {string} petSn - 召唤兽序列号\r\n   * @param {Object} params - 额外参数（如年月）\r\n   * @returns {Promise}\r\n   */\r\n  getPetDetail(petSn, params = {}) {\r\n    return api.get(`/pet/${petSn}`, params)\r\n  },\r\n\r\n  /**\r\n   * 寻找召唤兽市场锚点\r\n   * @param {Object} data - 召唤兽数据和查询参数\r\n   * @returns {Promise}\r\n   */\r\n  findPetAnchors(data) {\r\n    return api.post('/pet/anchors', data)\r\n  },\r\n\r\n  /**\r\n   * 获取召唤兽估价\r\n   * @param {Object} data - 召唤兽数据和估价参数\r\n   * @returns {Promise}\r\n   */\r\n  getPetValuation(data) {\r\n    return api.post('/pet/valuation', data)\r\n  },\r\n\r\n  /**\r\n   * 批量召唤兽估价\r\n   * @param {Object} data - 召唤兽列表和估价参数\r\n   * @returns {Promise}\r\n   */\r\n  batchPetValuation(data) {\r\n    return api.post('/pet/batch-valuation', data)\r\n  },\r\n\r\n  /**\r\n   * 更新召唤兽装备价格\r\n   * @param {Object} data - 召唤兽数据和估价参数\r\n   * @returns {Promise}\r\n   */\r\n  updatePetEquipmentsPrice(data) {\r\n    return api.post('/pet/update-equipments-price', data)\r\n  },\r\n\r\n  /**\r\n   * 获取当前年月携带装备但未估价的召唤兽数量\r\n   * @param {Object} params - 查询参数（年月）\r\n   * @returns {Promise}\r\n   */\r\n  getUnvaluedPetsCount(params = {}) {\r\n    return api.get('/pet/unvalued-count', params)\r\n  },\r\n\r\n  /**\r\n   * 批量更新未估价召唤兽的装备价格\r\n   * @param {Object} data - 请求数据（年月）\r\n   * @returns {Promise}\r\n   */\r\n  batchUpdateUnvaluedPets(data = {}) {\r\n    return api.post('/pet/batch-update-unvalued', data)\r\n  },\r\n\r\n  /**\r\n   * 获取任务状态\r\n   * @param {string} taskId - 任务ID\r\n   * @returns {Promise}\r\n   */\r\n  getTaskStatus(taskId) {\r\n    return api.get(`/pet/task-status/${taskId}`)\r\n  },\r\n\r\n  /**\r\n   * 获取活跃任务列表\r\n   * @returns {Promise}\r\n   */\r\n  getActiveTasks() {\r\n    return api.get('/pet/active-tasks')\r\n  },\r\n\r\n  /**\r\n   * 停止任务\r\n   * @param {string} taskId - 任务ID\r\n   * @returns {Promise}\r\n   */\r\n  stopTask(taskId) {\r\n    return api.post(`/pet/stop-task/${taskId}`)\r\n  },\r\n\r\n  /**\r\n   * 删除召唤兽\r\n   * @param {string} petSn - 召唤兽序列号\r\n   * @param {Object} params - 查询参数（年月）\r\n   * @returns {Promise}\r\n   */\r\n  deletePet(petSn, params = {}) {\r\n    return api.delete(`/pet/${petSn}`, params)\r\n  },\r\n\r\n  /**\r\n   * 通过equip_sn获取召唤兽详情\r\n   * @param {string} year - 年份\r\n   * @param {string} month - 月份\r\n   * @param {string} equipSn - 召唤兽序列号\r\n   * @returns {Promise}\r\n   */\r\n  getPetByEquipSn(year, month, equipSn) {\r\n    return api.get(`/pet/${year}/${month}/${equipSn}`)\r\n  },\r\n\r\n  /**\r\n   * 获取召唤兽统计数据\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise}\r\n   */\r\n  getPetStats(params = {}) {\r\n    return api.get('/pet/stats', params)\r\n  }\r\n} ","// Cookie管理插件 - 简化版本\r\nconst CookieManager = {\r\n  install(Vue) {\r\n    // 添加全局属性\r\n    Vue.prototype.$cookieManager = {\r\n      // 获取缓存状态\r\n      getCache() {\r\n        return this.$store.state.cookie.cookieValidationCache\r\n      },\r\n\r\n      // 设置缓存状态\r\n      setCache(cache) {\r\n        this.$store.commit('cookie/updateCookieCache', cache)\r\n      },\r\n\r\n      // 重置插件状态\r\n      reset() {\r\n        this.$store.dispatch('cookie/clearCookieCache')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default CookieManager ","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n\nVue.use(Vuex)\n\n// Cookie验证缓存模块\nconst cookieModule = {\n  namespaced: true,\n  state: {\n    cookieValidationCache: {\n      lastValidTime: null, // 最后一次验证成功的时间戳\n      cacheDuration: 5 * 60 * 1000, // 缓存时间：5分钟（毫秒）\n      isValid: false // 当前缓存的有效状态\n    }\n  },\n  getters: {\n    // 检查缓存是否有效\n    isCookieCacheValid: (state) => {\n      if (!state.cookieValidationCache.isValid || !state.cookieValidationCache.lastValidTime) {\n        return false\n      }\n\n      const now = Date.now()\n      const timeSinceLastValid = now - state.cookieValidationCache.lastValidTime\n\n      // 如果距离上次验证成功的时间小于缓存时间，则使用缓存\n      if (timeSinceLastValid < state.cookieValidationCache.cacheDuration) {\n        return true\n      }\n\n      // 缓存已过期，自动清理\n      return false\n    },\n\n    // 获取缓存剩余时间（分钟）\n    getCacheRemainingMinutes: (state) => {\n      if (!state.cookieValidationCache.isValid || !state.cookieValidationCache.lastValidTime) {\n        return 0\n      }\n\n      const now = Date.now()\n      const timeSinceLastValid = now - state.cookieValidationCache.lastValidTime\n      const remainingTime = state.cookieValidationCache.cacheDuration - timeSinceLastValid\n\n      if (remainingTime <= 0) {\n        return 0\n      }\n\n      return Math.ceil(remainingTime / (60 * 1000))\n    },\n\n    // 获取缓存过期时间\n    getCacheExpiryTime: (state) => {\n      if (!state.cookieValidationCache.isValid || !state.cookieValidationCache.lastValidTime) {\n        return null\n      }\n\n      return new Date(\n        state.cookieValidationCache.lastValidTime + state.cookieValidationCache.cacheDuration\n      )\n    },\n\n    // 获取缓存状态\n    getCookieCache: (state) => {\n      return state.cookieValidationCache\n    }\n  },\n  mutations: {\n    // 更新Cookie缓存\n    updateCookieCache(state, isValid) {\n      state.cookieValidationCache.isValid = isValid\n      if (isValid) {\n        state.cookieValidationCache.lastValidTime = Date.now()\n        console.log('Cookie验证缓存已更新，有效期5分钟')\n      } else {\n        state.cookieValidationCache.lastValidTime = null\n        console.log('Cookie验证缓存已清除')\n      }\n    }\n  },\n  actions: {\n    // 清除Cookie缓存\n    clearCookieCache({ commit }) {\n      commit('updateCookieCache', false)\n    },\n\n    // 清理过期缓存\n    cleanExpiredCache({ commit, getters }) {\n      if (!getters.isCookieCacheValid) {\n        commit('updateCookieCache', false)\n        console.log('过期缓存已自动清理')\n      }\n    }\n  }\n}\n\nexport default new Vuex.Store({\n  state: {\n    areaid: 43,\n    server_id: 77,\n    server_name: '进贤门',\n    server_data_value: [43, 77] // 第一项是areaid，第二项是server_id\n  },\n  getters: {\n    // 获取当前服务器数据\n    getCurrentServerData: (state) => {\n      return {\n        areaid: state.areaid,\n        server_id: state.server_id,\n        server_name: state.server_name,\n        server_data_value: state.server_data_value\n      }\n    }\n  },\n  mutations: {\n    // 更新服务器数据\n    updateServerData(state, { areaid, server_id, server_name }) {\n      state.areaid = areaid\n      state.server_id = server_id\n      state.server_name = server_name\n      state.server_data_value = [areaid, server_id]\n    },\n\n    // 更新server_data_value\n    updateServerDataValue(state, server_data_value) {\n      if (Array.isArray(server_data_value) && server_data_value.length >= 2) {\n        state.server_data_value = server_data_value\n        state.areaid = server_data_value[0]\n        state.server_id = server_data_value[1]\n\n        // 根据server_data_value查找对应的server_name\n        if (window.server_data) {\n          for (let key in window.server_data) {\n            let [parent, children] = window.server_data[key]\n            const [, , , , areaValue] = parent\n            if (areaValue === server_data_value[0]) {\n              for (let child of children) {\n                if (child[0] === server_data_value[1]) {\n                  state.server_name = child[1]\n                  break\n                }\n              }\n              break\n            }\n          }\n        }\n      } else {\n        state.server_data_value = [43, 77]\n        state.areaid = 43\n        state.server_id = 77\n        state.server_name = '进贤门'\n      }\n    }\n  },\n  actions: {\n    // 设置服务器数据\n    setServerData({ commit }, { areaid, server_id, server_name }) {\n      commit('updateServerData', { areaid, server_id, server_name })\n    },\n\n    // 设置server_data_value\n    setServerDataValue({ commit }, server_data_value) {\n      commit('updateServerDataValue', server_data_value)\n    }\n  },\n  modules: {\n    cookie: cookieModule\n  },\n  plugins: [\n    createPersistedState({\n      // 持久化整个store\n      key: 'cbg-cookie-cache',\n      // 存储方式\n      storage: window.localStorage\n    })\n  ]\n})\n","import axios from 'axios'\r\nimport { Notification } from 'element-ui'\r\n\r\n// 判断是否为Chrome插件环境\r\nconst isChromeExtension = typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.id\r\n\r\n// 根据环境设置不同的baseURL\r\nconst baseURL = isChromeExtension ? 'http://xyq.lingtong.xyz/cbg/api/v1' : '/api/v1'\r\n\r\n// 创建axios实例\r\nconst request = axios.create({\r\n  baseURL: baseURL, // API基础路径\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n// 请求拦截器\r\nrequest.interceptors.request.use(\r\n  config => {\r\n    // 在发送请求之前做些什么\r\n    console.log('发送请求:', config.method?.toUpperCase(), config.url)\r\n    return config\r\n  },\r\n  error => {\r\n    // 对请求错误做些什么\r\n    console.error('请求错误:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nrequest.interceptors.response.use(\r\n  response => {\r\n    // 对响应数据做些什么\r\n    const { data } = response\r\n    \r\n    return data\r\n  },\r\n  error => {\r\n    // 对响应错误做些什么\r\n    console.error('响应错误:', error)\r\n    \r\n    let message = '请求失败'\r\n    let responseData = null\r\n    \r\n    if (error.response) {\r\n      // 服务器响应了错误状态码\r\n      const { status, data } = error.response\r\n      message = data.message || `请求失败 (${status})`\r\n      \r\n      // 如果后端返回了data字段，使用后端的data；否则使用后端的完整响应\r\n      if (data.data !== undefined) {\r\n        responseData = data.data\r\n      } else {\r\n        responseData = data\r\n      }\r\n      \r\n      console.log('错误响应数据:', responseData)\r\n    } else if (error.request) {\r\n      // 请求已发出但没有收到响应\r\n      message = '网络错误，请检查网络连接'\r\n    } else {\r\n      // 其他错误\r\n      message = error.message || '请求失败'\r\n    }\r\n    \r\n    Notification.error({\r\n      title: '错误',\r\n      message: message\r\n    })\r\n    \r\n    return {\r\n      code: error.response?.status || 500,\r\n      data: responseData,  // 使用后端返回的data，而不是强制设置为null\r\n      message: message,\r\n      timestamp: Date.now()\r\n    }\r\n  }\r\n)\r\n\r\n// 导出封装的请求方法\r\nexport const api = {\r\n  // GET请求\r\n  get(url, params = {}) {\r\n    return request.get(url, { params })\r\n  },\r\n  \r\n  // POST请求\r\n  post(url, data = {}) {\r\n    return request.post(url, data)\r\n  },\r\n  \r\n  // PUT请求\r\n  put(url, data = {}) {\r\n    return request.put(url, data)\r\n  },\r\n  \r\n  // DELETE请求\r\n  delete(url, params = {}) {\r\n    return request.delete(url, { params })\r\n  },\r\n  \r\n  // 下载文件\r\n  download(url, params = {}, filename) {\r\n    return request.get(url, { \r\n      params,\r\n      responseType: 'blob'\r\n    }).then(response => {\r\n      if (response.code === 200) {\r\n        // 创建下载链接\r\n        const blob = new Blob([response.data])\r\n        const downloadUrl = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = downloadUrl\r\n        link.download = filename || 'download'\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        document.body.removeChild(link)\r\n        window.URL.revokeObjectURL(downloadUrl)\r\n      }\r\n      return response\r\n    })\r\n  }\r\n}\r\n\r\nexport default request ","import { api } from '@/utils/request'\r\n\r\n/**\r\n * 角色相关API\r\n */\r\nexport const roleApi = {\r\n  /**\r\n   * 获取角色列表\r\n   * @param {Object} params - 查询参数\r\n   * @param {number} params.page - 页码\r\n   * @param {number} params.page_size - 每页大小\r\n   * @param {number} params.year - 年份\r\n   * @param {number} params.month - 月份\r\n   * @param {number} params.level_min - 最低等级\r\n   * @param {number} params.level_max - 最高等级\r\n   * @param {number} params.equip_num - 装备数量限制\r\n   * @param {number} params.pet_num - 召唤兽数量限制\r\n   * @param {number} params.pet_num_level - 召唤兽等级限制\r\n   * @param {string} params.sort_by - 排序字段\r\n   * @param {string} params.sort_order - 排序方向\r\n   * @param {string} params.role_type - 角色类型，'normal' 表示正常角色，'empty' 表示空号角色\r\n   * @returns {Promise}\r\n   */\r\n  getRoleApi(params = {}) {\r\n    return api.get('/role/', params)\r\n  },\r\n\r\n  /**\r\n   * 获取角色详情\r\n   * @param {string} equipId - 角色装备ID\r\n   * @param {Object} params - 额外参数（如年月）\r\n   * @returns {Promise}\r\n   */\r\n  getRoleDetail(equipId, params = {}) {\r\n    return api.get(`/role/${equipId}`, params)\r\n  },\r\n\r\n  /**\r\n   * 删除角色\r\n   * @param {string} eid - 角色订单号\r\n   * @param {Object} params - 额外参数（如年月、role_type）\r\n   * @returns {Promise}\r\n   */\r\n  deleteRole(eid, params = {}) {\r\n    return api.delete(`/role/${eid}`, params)\r\n  },\r\n\r\n  /**\r\n   * 切换角色类型（数据迁移）\r\n   * @param {string} eid - 角色订单号\r\n   * @param {Object} params - 查询参数（如年月、role_type/target_role_type）\r\n   * @returns {Promise}\r\n   */\r\n  switchRoleType(eid, params = {}) {\r\n    return api.post(`/role/${eid}/switch-type`, params)\r\n  },\r\n\r\n  /**\r\n   * 角色估价\r\n   * @param {Object} params - 估价参数\r\n   * @param {string} params.eid - 角色唯一标识符\r\n   * @param {number} params.year - 年份（可选）\r\n   * @param {number} params.month - 月份（可选）\r\n   * @param {string} params.role_type - 角色类型（可选，默认normal）\r\n   * @param {string} params.strategy - 估价策略（可选，默认fair_value）\r\n   * @param {number} params.similarity_threshold - 相似度阈值（可选，默认0.7）\r\n   * @param {number} params.max_anchors - 最大锚点数量（可选，默认30）\r\n   * @returns {Promise}\r\n   */\r\n  getRoleValuation(params = {}) {\r\n    return api.post('/role/valuation', params)\r\n  },\r\n\r\n  /**\r\n   * 批量角色估价\r\n   * @param {Object} params - 批量估价参数\r\n   * @param {Array} params.eid_list - 角色eid列表\r\n   * @param {number} params.year - 年份（可选）\r\n   * @param {number} params.month - 月份（可选）\r\n   * @param {string} params.role_type - 角色类型（可选，默认normal）\r\n   * @param {string} params.strategy - 估价策略（可选，默认fair_value）\r\n   * @param {number} params.similarity_threshold - 相似度阈值（可选，默认0.7）\r\n   * @param {number} params.max_anchors - 最大锚点数量（可选，默认30）\r\n   * @param {boolean} params.verbose - 是否详细日志（可选，默认false）\r\n   * @returns {Promise}\r\n   */\r\n  batchRoleValuation(params = {}) {\r\n    return api.post('/role/batch-valuation', params)\r\n  },\r\n\r\n  /**\r\n   * 更新角色裸号价格\r\n   * @param {Object} params - 更新参数\r\n   * @param {string} params.eid - 角色唯一标识符\r\n   * @param {number} params.base_price - 裸号价格（分）\r\n   * @param {number} params.year - 年份（可选）\r\n   * @param {number} params.month - 月份（可选）\r\n   * @param {string} params.role_type - 角色类型（可选，默认normal）\r\n   * @returns {Promise}\r\n   */\r\n  updateRoleBasePrice(params = {}) {\r\n    return api.post(`/role/${params.eid}/update-base-price`, params)\r\n  },\r\n\r\n  /**\r\n   * 查找相似角色锚点\r\n   * @param {Object} params - 查询参数\r\n   * @param {string} params.eid - 角色唯一标识符\r\n   * @param {number} params.year - 年份\r\n   * @param {number} params.month - 月份\r\n   * @param {string} params.role_type - 角色类型（可选，默认normal）\r\n   * @param {number} params.similarity_threshold - 相似度阈值（可选，默认0.7）\r\n   * @param {number} params.max_anchors - 最大锚点数量（可选，默认30）\r\n   * @returns {Promise}\r\n   */\r\n  findRoleAnchors(params = {}) {\r\n    return api.post('/role/find-anchors', params)\r\n  },\r\n\r\n  /**\r\n   * 健康检查\r\n   * @returns {Promise}\r\n   */\r\n  healthCheck() {\r\n    return api.get('/role/health')\r\n  },\r\n\r\n  /**\r\n   * 获取角色统计数据\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise}\r\n   */\r\n  getRoleStats(params = {}) {\r\n    return api.get('/role/stats', params)\r\n  }\r\n\r\n} ","import { api } from '@/utils/request'\r\n\r\n/**\r\n * 装备相关API\r\n */\r\nexport const equipmentApi = {\r\n  /**\r\n   * 获取装备列表\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentList(params = {}) {\r\n    return api.get('/equipment/', params)\r\n  },\r\n\r\n  /**\r\n   * 获取装备详情\r\n   * @param {string} equipSn - 装备序列号\r\n   * @param {Object} params - 额外参数（如年月）\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentDetail(equipSn, params = {}) {\r\n    return api.get(`/equipment/${equipSn}`, params)\r\n  },\r\n\r\n  /**\r\n   * 寻找装备市场锚点\r\n   * @param {Object} data - 装备数据和查询参数\r\n   * @returns {Promise}\r\n   */\r\n  findEquipmentAnchors(data) {\r\n    return api.post('/equipment/anchors', data)\r\n  },\r\n\r\n  /**\r\n   * 获取装备估价\r\n   * @param {Object} data - 装备数据和估价参数\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentValuation(data) {\r\n    return api.post('/equipment/valuation', data)\r\n  },\r\n\r\n\r\n\r\n\r\n  /**\r\n   * 批量装备估价\r\n   * @param {Object} data - 装备列表和估价参数\r\n   * @returns {Promise}\r\n   */\r\n  batchEquipmentValuation(data) {\r\n    return api.post('/equipment/batch-valuation', data)\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * 删除装备\r\n   * @param {string} equipSn - 装备序列号\r\n   * @param {Object} params - 额外参数（如年月）\r\n   * @returns {Promise}\r\n   */\r\n  deleteEquipment(equipSn, params = {}) {\r\n    return api.delete(`/equipment/${equipSn}`, params)\r\n  },\r\n\r\n  /**\r\n   * 获取灵饰数据\r\n   * @returns {Promise}\r\n   */\r\n  getLingshiConfig() {\r\n    return api.get('/equipment/lingshi-config')\r\n  },\r\n\r\n  /**\r\n   * 获取武器数据\r\n   * @returns {Promise}\r\n   */\r\n  getWeaponConfig() {\r\n    return api.get('/equipment/weapon-config')\r\n  },\r\n\r\n  /**\r\n   * 获取召唤兽装备数据\r\n   * @returns {Promise}\r\n   */\r\n  getPetEquipConfig() {\r\n    return api.get('/equipment/pet-equip-config')\r\n  },\r\n\r\n  /**\r\n   * 获取装备数据\r\n   * @returns {Promise}\r\n   */\r\n  getEquipConfig() {\r\n    return api.get('/equipment/equip-config')\r\n  },\r\n  /**\r\n   * 标记装备为异常\r\n   * @param {Object} data - 装备数据和标记原因\r\n   * @returns {Promise}\r\n   */\r\n  markEquipmentAsAbnormal(data) {\r\n    return api.post('/equipment/mark-abnormal', data)\r\n  },\r\n\r\n  /**\r\n   * 获取异常装备列表\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise}\r\n   */\r\n  getAbnormalEquipmentList(params = {}) {\r\n    return api.get('/equipment/abnormal', params)\r\n  },\r\n\r\n  /**\r\n   * 更新异常装备状态\r\n   * @param {string} equipSn - 装备序列号\r\n   * @param {Object} data - 更新数据\r\n   * @returns {Promise}\r\n   */\r\n  updateAbnormalEquipmentStatus(equipSn, data) {\r\n    return api.put(`/equipment/abnormal/${equipSn}`, data)\r\n  },\r\n\r\n  /**\r\n   * 删除异常装备记录\r\n   * @param {string} equipSn - 装备序列号\r\n   * @returns {Promise}\r\n   */\r\n  deleteAbnormalEquipment(equipSn) {\r\n    return api.delete(`/equipment/abnormal/${equipSn}`)\r\n  },\r\n\r\n  /**\r\n   * 提取装备特征\r\n   * @param {Object} data - 装备数据和参数\r\n   * @returns {Promise}\r\n   */\r\n  extractFeatures(data) {\r\n    return api.post('/equipment/extract-features', data)\r\n  },\r\n\r\n  /**\r\n   * 获取装备统计数据\r\n   * @param {Object} params - 查询参数\r\n   * @returns {Promise}\r\n   */\r\n  getEquipmentStats(params = {}) {\r\n    return api.get('/equipment/stats', params)\r\n  }\r\n} ","import { api } from '@/utils/request'\r\n\r\n/**\r\n * 爬虫相关API\r\n */\r\nexport const spiderApi = {\r\n  /**\r\n   * 获取任务状态\r\n   * @returns {Promise}\r\n   */\r\n  getStatus() {\r\n    return api.get('/spider/status')\r\n  },\r\n\r\n  /**\r\n   * 获取爬虫配置\r\n   * @returns {Promise}\r\n   */\r\n  getConfig() {\r\n    return api.get('/spider/config')\r\n  },\r\n\r\n  /**\r\n   * 启动基础爬虫\r\n   * @param {Object} data - 爬虫参数\r\n   * @returns {Promise}\r\n   */\r\n  startBasic(data) {\r\n    return api.post('/spider/basic/start', data)\r\n  },\r\n\r\n  /**\r\n   * 启动角色爬虫\r\n   * @param {Object} data - 角色爬虫参数\r\n   * @returns {Promise}\r\n   */\r\n  startRole(data) {\r\n    return api.post('/spider/role/start', data)\r\n  },\r\n\r\n  /**\r\n   * 启动装备爬虫\r\n   * @param {Object} data - 装备爬虫参数\r\n   * @returns {Promise}\r\n   */\r\n  startEquip(data) {\r\n    return api.post('/spider/equip/start', data)\r\n  },\r\n\r\n  /**\r\n   * 启动召唤兽爬虫\r\n   * @param {Object} data - 召唤兽爬虫参数\r\n   * @returns {Promise}\r\n   */\r\n  startPet(data) {\r\n    return api.post('/spider/pet/start', data)\r\n  },\r\n\r\n  /**\r\n   * 启动代理爬虫\r\n   * @param {Object} data - 代理爬虫参数\r\n   * @returns {Promise}\r\n   */\r\n  startProxy(data) {\r\n    return api.post('/spider/proxy/start', data)\r\n  },\r\n\r\n  /**\r\n   * 管理代理\r\n   * @param {Object} data - 代理管理参数\r\n   * @returns {Promise}\r\n   */\r\n  manageProxy(data = {}) {\r\n    return api.post('/spider/proxy/manage', data)\r\n  },\r\n\r\n  /**\r\n   * 停止任务\r\n   * @returns {Promise}\r\n   */\r\n  stopTask() {\r\n    return api.post('/spider/task/stop')\r\n  },\r\n\r\n  /**\r\n   * 重置任务状态\r\n   * @returns {Promise}\r\n   */\r\n  resetTask() {\r\n    return api.post('/spider/task/reset')\r\n  },\r\n\r\n  /**\r\n   * 获取任务日志\r\n   * @param {Object} params - 参数\r\n   * @param {number} params.lines - 返回的日志行数，默认100\r\n   * @param {string} params.type - 日志类型 (current/recent)，默认current\r\n   * @returns {Promise}\r\n   */\r\n  getLogs(params = {}) {\r\n    return api.get('/spider/logs', params)\r\n  },\r\n\r\n  /**\r\n   * 从日志文件解析进度信息\r\n   * @param {Object} params - 参数\r\n   * @param {string} params.type - 爬虫类型 (role/equip/pet/proxy)，默认role\r\n   * @returns {Promise}\r\n   */\r\n  getProgress(params = {}) {\r\n    return api.get('/spider/progress', params)\r\n  },\r\n\r\n  /**\r\n   * 流式获取实时日志\r\n   * @returns {EventSource}\r\n   */\r\n  streamLogs() {\r\n    // 使用完整的URL，确保连接到正确的后端\r\n    const baseURL = process.env.NODE_ENV === 'development' \r\n      ? 'http://localhost:5000' \r\n      : window.location.origin\r\n    return new EventSource(`${baseURL}/api/v1/spider/logs/stream`)\r\n  },\r\n\r\n  /**\r\n   * 获取文件列表\r\n   * @returns {Promise}\r\n   */\r\n  getFiles() {\r\n    return api.get('/spider/files')\r\n  },\r\n\r\n  /**\r\n   * 获取日志文件列表\r\n   * @returns {Promise}\r\n   */\r\n  getLogFiles() {\r\n    return api.get('/spider/logs/files')\r\n  },\r\n\r\n  /**\r\n   * 下载文件\r\n   * @param {string} filename - 文件名\r\n   * @returns {Promise}\r\n   */\r\n  downloadFile(filename) {\r\n    return api.download(`/spider/download/${filename}`, {}, filename)\r\n  },\r\n\r\n  /**\r\n   * 启动Playwright收集器\r\n   * @param {Object} data - Playwright收集器参数\r\n   * @param {boolean} data.headless - 是否无头模式\r\n   * @param {string} data.target_url - 目标URL\r\n   * @returns {Promise}\r\n   */\r\n  startPlaywright(data) {\r\n    return api.post('/spider/playwright/start', data)\r\n  },\r\n\r\n  /**\r\n   * 检查Cookie状态\r\n   * @returns {Promise}\r\n   */\r\n  checkCookie() {\r\n    return api.get('/spider/cookie/check')\r\n  },\r\n\r\n  /**\r\n   * 更新Cookie\r\n   * @returns {Promise}\r\n   */\r\n  updateCookies() {\r\n    return api.post('/spider/cookie/update')\r\n  },\r\n\r\n  /**\r\n   * 解析响应数据\r\n   * @param {Object} data - 解析参数\r\n   * @param {string} data.url - CBG请求的完整URL\r\n   * @param {string} data.response_text - 服务器返回的响应文本\r\n   * @returns {Promise}\r\n   */\r\n  parseResponse(data) {\r\n    return api.post('/spider/parse/response', data)\r\n  }\r\n} ","// 统一API入口\r\nexport { roleApi } from './role'\r\nexport { equipmentApi } from './equipment'\r\nexport { petApi } from './pet'\r\nexport { spiderApi } from './spider'\r\nexport { systemApi } from './system'\r\n\r\n// 也可以作为默认导出\r\nimport { roleApi } from './role'\r\nimport { equipmentApi } from './equipment'\r\nimport { petApi } from './pet'\r\nimport { spiderApi } from './spider'\r\nimport { systemApi } from './system'\r\n\r\nexport default {\r\n  role: roleApi,\r\n  equipment: equipmentApi,\r\n  pet: petApi,\r\n  spider: spiderApi,\r\n  system: systemApi\r\n} "],"names":["systemApi","getSystemInfo","api","get","getFiles","downloadFile","filename","getHotServers","getLimitedSkinConfig","getSearchParams","getSearchParamByType","paramType","updateSearchParam","data","post","getMarketDataStatus","getMarketDataAnalysis","refreshMarketData","force_refresh","use_cache","refreshFullCache","getRoleRefreshStatus","getCacheStatus","getEquipmentCacheStatus","refreshEquipmentData","refreshEquipmentFullCache","getEquipmentMarketDataStatus","getRedisStatus","getEquipmentRefreshStatus","getPetCacheStatus","getPetMarketDataStatus","refreshPetData","refreshPetFullCache","getPetRefreshStatus","getSystemStats","render","_vm","this","_c","_self","$route","meta","showHeader","_e","style","padding","staticRenderFns","staticClass","attrs","activeMenuIndex","_v","cookieButtonType","slot","_s","cookieButtonText","dynamicCookieStatus","text","type","lastModified","getCacheRemainingMinutes","staticStyle","cookieChecking","cookieUpdating","on","handleCheckStatus","handleUpdateCookies","name","props","autoCheck","Boolean","default","showCacheInfo","showActions","cookiesStatus","server_validated","cookieUpdateTimer","computed","isCookieCacheValid","$store","getters","getCacheExpiryTime","mounted","$nextTick","beforeDestroy","stopCookieUpdateMonitoring","methods","console","log","response","$api","spider","checkCookie","code","valid","commit","last_modified","$notify","warning","title","message","error","$emit","handleClearCache","dispatch","info","updateCookies","Error","startCookieUpdateMonitoring","clearInterval","checkCount","maxChecks","setInterval","statusResponse","getStatus","status","includes","updateCookieCache","success","component","components","CookieStatus","path","startsWith","cookieButtonIcon","updateTimer","$forceUpdate","$watch","immediate","Header","petApi","getPetList","params","getPetDetail","petSn","findPetAnchors","getPetValuation","batchPetValuation","updatePetEquipmentsPrice","getUnvaluedPetsCount","batchUpdateUnvaluedPets","getTaskStatus","taskId","getActiveTasks","stopTask","deletePet","delete","getPetByEquipSn","year","month","equipSn","getPetStats","CookieManager","install","Vue","prototype","$cookieManager","getCache","state","cookie","cookieValidationCache","setCache","cache","reset","use","Vuex","cookieModule","namespaced","lastValidTime","cacheDuration","isValid","now","Date","timeSinceLastValid","remainingTime","Math","ceil","getCookieCache","mutations","actions","clearCookieCache","cleanExpiredCache","areaid","server_id","server_name","server_data_value","getCurrentServerData","updateServerData","updateServerDataValue","Array","isArray","length","window","server_data","key","parent","children","areaValue","child","setServerData","setServerDataValue","modules","plugins","createPersistedState","storage","localStorage","isChromeExtension","chrome","runtime","id","baseURL","request","axios","create","headers","interceptors","config","method","toUpperCase","url","Promise","reject","responseData","undefined","Notification","timestamp","put","download","responseType","then","blob","Blob","downloadUrl","URL","createObjectURL","link","document","createElement","href","body","appendChild","click","removeChild","revokeObjectURL","roleApi","getRoleApi","getRoleDetail","equipId","deleteRole","eid","switchRoleType","getRoleValuation","batchRoleValuation","updateRoleBasePrice","findRoleAnchors","healthCheck","getRoleStats","equipmentApi","getEquipmentList","getEquipmentDetail","findEquipmentAnchors","getEquipmentValuation","batchEquipmentValuation","deleteEquipment","getLingshiConfig","getWeaponConfig","getPetEquipConfig","getEquipConfig","markEquipmentAsAbnormal","getAbnormalEquipmentList","updateAbnormalEquipmentStatus","deleteAbnormalEquipment","extractFeatures","getEquipmentStats","spiderApi","getConfig","startBasic","startRole","startEquip","startPet","startProxy","manageProxy","resetTask","getLogs","getProgress","streamLogs","location","origin","EventSource","getLogFiles","startPlaywright","parseResponse","role","equipment","pet","system"],"sourceRoot":""}